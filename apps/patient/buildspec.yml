version: 0.2

phases:
  install:
    on-failure: ABORT
    runtime-versions:
      nodejs: 16
    commands:
      - printenv
      - node -v
      - npm -v
      - npm install
  build:
    commands:
      - printenv
      - node -v
      - npm -v
      # - npm install
      # For boson save in folders named after the branch name
      - |
        if [ "$ENV" = "boson" ] ; then
          export OUTPUT_DIR=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | sed -e "s/refs\/heads\///g")

          # Lowercase branch name
          OUTPUT_DIR=$(echo "$OUTPUT_DIR" | tr '[:upper:]' '[:lower:]')

          # Replace /'s
          OUTPUT_DIR=$(echo "$OUTPUT_DIR" | tr / _)

          npx nx run patient:build:boson
        fi
      # For photon and neutron save in folders named after the git hash
      - |
        if [ "$ENV" = "photon" ] ; then
          export OUTPUT_DIR="photon"
          npx nx run patient:build:photon
        fi
      - |
        if [ "$ENV" = "neutron" ] ; then
          export OUTPUT_DIR="neutron"
          npx nx run patient:build:neutron
        fi
      - echo "OUTPUT_DIR set to '$OUTPUT_DIR'"
  post_build:
    commands:
      - echo Installing Datadog CI
      - npm install -g @datadog/datadog-ci
      - echo Uploading source maps to Datadog
      - |
        export DATADOG_API_KEY=$DATADOG_API_KEY
        SERVICE_NAME=$(node -p "require('./apps/patient/package.json').name")
        PACKAGE_VERSION=$(git rev-parse HEAD)
        ENVIRONMENT=$OUTPUT_DIR
        npx datadog-ci sourcemaps upload dist/apps/patient \
          --service=$SERVICE_NAME \
          --release-version=$PACKAGE_VERSION \
          --minified-path-prefix=https://orders.${ENVIRONMENT}.health/static/js

artifacts:
  files:
    - '**/*'
  base-directory: 'dist/apps/patient'
  name: $OUTPUT_DIR
